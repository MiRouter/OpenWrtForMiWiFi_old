#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
  release:
    types: published
  push:
    branches:
      - main
#    paths:
#       - 'aaa'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04   
    if: github.event.repository.owner.id == github.event.sender.id

    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [xiaomi]
        
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Load Settings.ini
      run: |
        source "${GITHUB_WORKSPACE}/config/${{matrix.target}}/settings.ini"
        echo "::set-env name=REPO_URL::${REPO_URL}"
        echo "::set-env name=REPO_BRANCH::${REPO_BRANCH}"
        echo "::set-env name=FEEDS_CONF::${FEEDS_CONF}"
        echo "::set-env name=COMMON_DIR::${COMMON_DIR}"
        echo "::set-env name=FIRMWARE_TAG::${FIRMWARE_TAG}"
        echo "::set-env name=DIY_P1_SH::${DIY_P1_SH}"
        echo "::set-env name=DIY_P2_SH::${DIY_P2_SH}"
        echo "::set-env name=SSH_ACTIONS::${SSH_ACTIONS}"
        echo "::set-env name=UPLOAD_BIN_DIR::${UPLOAD_BIN_DIR}"
        echo "::set-env name=UPLOAD_PACKAGES_DIR::${UPLOAD_PACKAGES_DIR}"
        echo "::set-env name=UPLOAD_FIRMWARE::${UPLOAD_FIRMWARE}"
        echo "::set-env name=UPLOAD_COWTRANSFER::${UPLOAD_COWTRANSFER}"
        echo "::set-env name=UPLOAD_WETRANSFER::${UPLOAD_WETRANSFER}"

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e common-all/$FEEDS_CONF ] && cp common-all/$FEEDS_CONF openwrt/feeds.conf.default
        [ -e $COMMON_DIR/$FEEDS_CONF ] && cp $COMMON_DIR/$FEEDS_CONF openwrt/feeds.conf.default
        [ -e config/${{matrix.target}}/$FEEDS_CONF ] && cp config/${{matrix.target}}/$FEEDS_CONF openwrt/feeds.conf.default
        if [ -f "common-all/$DIY_P1_SH" ]; then
        (
          chmod +x common-all/$DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/common-all/$DIY_P1_SH
          cd -
        )
        fi
        if [ -f "$COMMON_DIR/$DIY_P1_SH" ]; then
        (
          chmod +x $COMMON_DIR/$DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$COMMON_DIR/$DIY_P1_SH
          cd -
        )
        fi
        if [ -f "config/${{matrix.target}}/$DIY_P1_SH" ]; then
        (
          chmod +x config/${{matrix.target}}/$DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/config/${{matrix.target}}/$DIY_P1_SH
          cd -
        )
        fi


    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e common-all/files ] && cp -rf common-all/files openwrt/files
        [ -e common-all/diy ] && cp -Rf common-all/diy/* openwrt
        [ -e $COMMON_DIR/files ] && cp -rf $COMMON_DIR/files openwrt/files
        [ -e $COMMON_DIR/diy ] && cp -Rf $COMMON_DIR/diy/* openwrt
        [ -e config/${{matrix.target}}/files ] && cp -rf config/${{matrix.target}}/files openwrt/files
        [ -e config/${{matrix.target}}/diy ] && cp -rf config/${{matrix.target}}/diy/* openwrt
        [ -e config/${{matrix.target}}/.config ] && cp config/${{matrix.target}}/.config openwrt/.config
        if [ -f "common-all/$DIY_P2_SH" ]; then
        (
          chmod +x common-all/$DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/common-all/$DIY_P2_SH
          cd -
        )
        fi
        if [ -f "$COMMON_DIR/$DIY_P2_SH" ]; then
        (
          chmod +x $COMMON_DIR/$DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$COMMON_DIR/$DIY_P2_SH
          cd -
        )
        fi
        if [ -f "config/${{matrix.target}}/$DIY_P2_SH" ]; then
        (
          chmod +x config/${{matrix.target}}/$DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/config/${{matrix.target}}/$DIY_P2_SH
          cd -
        )
        fi

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}_${{ env.FIRMWARE_TAG }}${{ env.FILE_DATE }}
        path: openwrt/bin
        
    - name: Upload packages directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_PACKAGES_DIR == 'true'
      with:
        name: OpenWrt_packages${{ env.FILE_DATE }}
        path: openwrt/bin/packages

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets
        rm -rf ./*/*/packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}_${{ env.FIRMWARE_TAG }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: Upload firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"

    - name: Upload packages directory to Gitee
      if: steps.organize.outputs.status == 'success' 
      run: |
        git config --global user.email "liuran001@126.com"
        git config --global user.name "liuran001"
        git clone https://gitee.com/liuran001/MyOpenWrtIPK.git
        mkdir MyOpenWrtIPK/$(TZ='Asia/Shanghai' %m%d)
        cp -rf openwrt/bin/packages MyOpenWrtIPK/$(TZ='Asia/Shanghai' %m%d)/packages
        git add .
        git commit -m "update$(TZ='Asia/Shanghai' date +@%Y%m%d)"
        git push --quiet "https://${{ secrets.TOKEN }}@gitee.com/liuran001/MyOpenWrtIPK.git"
 

        

